{"data":{"markdownRemark":{"html":"<p>Something I really like about being a developer is that you learn all the time: a pattern, a lib, an obscure configuration trick... In the heat of the action, you're glad, but a few days later, you often forget. It is at these time that you think it would have been a good idea to take notes.</p>\n<p>I've already tried some notepads: <a href=\"http://jrnl.sh/\">jrnl</a>, but I've never been able to remember the commands, <a href=\"https://boostnote.io/\">boostnote</a> that I don't use when I code because it's an extra window, or <a href=\"https://gist.github.com/\">gist</a> but I can't keep it organized...</p>\n<p>And this summer, I received this link <a href=\"https://theptrk.com/2018/07/11/did-txt-file/\">\"did.txt file\"</a> file in my <a href=\"https://changelog.com/\">changelog</a> newsletter.</p>\n<h2>did.txt</h2>\n<p>Here is how <a href=\"https://theptrk.com/about/\">Patrick</a> introduces his blog post:</p>\n<blockquote>\n<p>Goal: create an insanely simple “did” file accessible by terminal</p>\n</blockquote>\n<p>And that's right, it's very simple (it's just adding an alias in your <code class=\"language-text\">.bash_profile</code> or <code class=\"language-text\">.zshrc</code>) and bloody effective :</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">alias</span> did<span class=\"token operator\">=</span><span class=\"token string\">\"vim +'normal Go' +'r!date' ~/did.txt\"</span></code></pre></div>\n<p>A <code class=\"language-text\">did</code> command opens a file into the terminal - so you don't leave your working environment - with the current date. All you have to do is write down this little thing you've just learned.</p>\n<p><img src=\"/images/blog/dev-diary/did_init.gif\" alt=\"did : the original\"></p>\n<p>And I really liked the idea of having a new tool built only with what is already present on the system. But in fact, it's a little too simple. For example, here is what happens if you use did twice on the same day:</p>\n<p><img src=\"/images/blog/dev-diary/did_init_pbl.gif\" alt=\"Maybe too simple\"></p>\n<p>Two problems made me think that I would not integrate this command as it stands in my daily routine:</p>\n<ul>\n<li><strong>All notes are in a single file</strong>, and because did is a daily note-taking tool, this file may become too long to be usable. The point of taking notes is to be able to read them again!</li>\n<li><strong>The file is in <code class=\"language-text\">.txt</code> format</strong>, which severely limits the possibilities of formatting, such as code extracts.</li>\n</ul>\n<p>This post documents how I customized this good idea to my needs. I tried to keep the same simplicity as the original did and continuing to use only what was already available in the terminal.</p>\n<h2>One logbook per week</h2>\n<p>I work in a two-week time box (sprint), so cutting the single file into several weekly logbooks was obvious.</p>\n<p>I'll not go into the implementation's details, but show you the (almost) final result. The <code class=\"language-text\">--help</code> option, <code class=\"language-text\">man</code> and Google were my friends to get this result.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">export</span> DID_PATH<span class=\"token operator\">=</span>~/.did\n\n<span class=\"token keyword\">function</span> did<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token function\">export</span> LC_ALL<span class=\"token operator\">=</span>C\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token operator\">!</span> -f <span class=\"token variable\">${DID_PATH}</span>/<span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">date</span> +%Y-%V<span class=\"token variable\">)</span></span>.txt <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span>\n        <span class=\"token keyword\">echo</span> <span class=\"token string\">\"Week <span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">date</span> +\"%V <span class=\"token punctuation\">(</span>%B %Y<span class=\"token variable\">)</span></span>\"</span><span class=\"token punctuation\">)</span> \\n\\n<span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">date</span> +<span class=\"token string\">\"%A %Y-%m-%d\"</span><span class=\"token variable\">)</span></span><span class=\"token string\">\" > <span class=\"token variable\">${DID_PATH}</span>/<span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">date</span> +%Y-%V<span class=\"token variable\">)</span></span>.txt\n    fi\n    FILE_EDITION_DATE=\"</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">stat</span> -c <span class=\"token string\">\"%y\"</span> $<span class=\"token punctuation\">{</span>DID_PATH<span class=\"token punctuation\">}</span>/<span class=\"token punctuation\">$(</span>date +%Y-%V<span class=\"token variable\">)</span></span>.txt<span class=\"token punctuation\">)</span><span class=\"token string\">\"\n    NOW=\"</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">date</span> +<span class=\"token string\">\"%Y-%m-%d\"</span><span class=\"token variable\">)</span></span><span class=\"token string\">\"\n    if [ <span class=\"token variable\">${FILE_EDITION_DATE:0:10}</span> != <span class=\"token variable\">${NOW}</span> ]; then\n        echo \"</span>\\n<span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">date</span> +<span class=\"token string\">\"%A %Y-%m-%d\"</span><span class=\"token variable\">)</span></span>\\n\" <span class=\"token operator\">>></span> <span class=\"token variable\">${DID_PATH}</span>/<span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">date</span> +%Y-%V<span class=\"token variable\">)</span></span>.txt\n    <span class=\"token keyword\">fi</span>\n    unset LC_ALL\n    vim +<span class=\"token string\">'normal Go'</span> <span class=\"token variable\">${DID_PATH}</span>/<span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">date</span> +%Y-%V<span class=\"token variable\">)</span></span>.txt\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Here are the points that seem important to me.</p>\n<ul>\n<li>\n<p><strong>A function rather than an alias</strong>: with the introduction of a logic <code class=\"language-text\">if the log exists, then, else</code>, it was necessary to replace the simple alias by a shell function. <code class=\"language-text\">if [ ! -f ${DID_PATH}/$(date +%Y-%V).txt ]; then</code></p>\n</li>\n<li>\n<p><strong>The <code class=\"language-text\">date</code> command</strong>: it's the command I've tested the most. Here it's simply used to format the current date. For example <code class=\"language-text\">date +%Y-%V</code>.</p>\n</li>\n<li>\n<p><strong>The <code class=\"language-text\">stat</code> command</strong>: it allows to retrieve a lot of information about a file, such as the date of the last modification <code class=\"language-text\">stat -c &quot;%y&quot; ${DID_PATH}/$(date +%Y-%V).txt</code>. This is what allowed me to know if the file had already been edited in the day or not, to decide whether or not to add this date when the logbook file is open.</p>\n</li>\n<li>\n<p><strong>The terminal locale</strong>: the <code class=\"language-text\">date</code> command is sensitive to the terminal locale. So I had months and days in French. Yep, my system is in french! To be able to keep my notes in English, it was necessary to change the terminal locale during the execution of the command with <code class=\"language-text\">LC_ALL=C</code>.</p>\n</li>\n<li>\n<p><strong>The environment variable <code class=\"language-text\">DID_PATH</code></strong>: this variable is very logical. It simplifies script writing and allows to easily change the storage folder. But it has a great side effect: by using <a href=\"https://direnv.net/\">direnv</a>, it will allow you to create a logbook per project!</p>\n</li>\n</ul>\n<p><img src=\"/images/blog/dev-diary/did.gif\" alt=\"the new did\"></p>\n<p>This new command gets the job done since now it creates one file per week instead of a single file. But this improvement would also be a good example for David Kadavy's article <a href=\"https://medium.com/@kadavy/complexity-is-creepy-its-never-just-one-more-thing-79a6a89192db\">\"Complexity is creepy: It’s never just one more thing”</a>.</p>\n<p>Indeed, my <em>one more thing</em> brings its share of questions:</p>\n<ul>\n<li>With the original <code class=\"language-text\">did</code>, I always opened the same file. But now <code class=\"language-text\">did</code> opens the current week's logbook. <strong>How will I view my notes from last week?</strong></li>\n<li>If I want to open a past logbook, <strong>how will I know which ones exist</strong>?</li>\n<li>With the original <code class=\"language-text\">did</code>, I could do a search with <code class=\"language-text\">vim</code> inside my single file. But now, <strong>how am I going to find a note through all logbooks?</strong></li>\n</ul>\n<h2>View a specific logbook : didv (view)</h2>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token keyword\">function</span> didv<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token variable\">$1</span> <span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">then</span>\n         <span class=\"token function\">cat</span> <span class=\"token variable\">${DID_PATH}</span>/<span class=\"token variable\">${1}</span>.txt\n    <span class=\"token keyword\">else</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token operator\">!</span> -f <span class=\"token variable\">${DID_PATH}</span>/<span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">date</span> +%Y-%V<span class=\"token variable\">)</span></span>.txt <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span>\n            LC_ALL<span class=\"token operator\">=</span>C <span class=\"token keyword\">echo</span> <span class=\"token string\">\"# Week <span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">date</span> +\"%V <span class=\"token punctuation\">(</span>%B %Y<span class=\"token variable\">)</span></span>\"</span><span class=\"token punctuation\">)</span> \\n\\n<span class=\"token comment\">## $(date +\"%A %Y-%m-%d\")\" > ${DID_PATH}/$(date +%Y-%V).txt</span>\n        <span class=\"token keyword\">fi</span>\n        <span class=\"token function\">cat</span> <span class=\"token variable\">${DID_PATH}</span>/<span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">date</span> +%Y-%V<span class=\"token variable\">)</span></span>.txt\n    <span class=\"token keyword\">fi</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>This function is simpler than <code class=\"language-text\">did</code>'s, but it introduces the use of command arguments: <code class=\"language-text\">if [ $1 ]</code>. <code class=\"language-text\">didv</code> opens the current log and <code class=\"language-text\">didv 2018-32</code> the log for week 32.<br>\n<code class=\"language-text\">cat</code> is in charge of displaying the file.</p>\n<p><img src=\"/images/blog/dev-diary/didv_txt.gif\" alt=\"Display logbooks with didv\"></p>\n<h2>List weekly logbooks: didl (list)</h2>\n<p>I thought that setting up the list of logs would be the fastest feature to set up. I pragmatically tested the <code class=\"language-text\">ls</code> and <code class=\"language-text\">tree</code> commands :</p>\n<p><img src=\"/images/blog/dev-diary/ls_tree.gif\" alt=\"list logs with ls and tree\"></p>\n<p>But two things bothered me:</p>\n<ul>\n<li>I didn't want to display the file extension (for example I want <code class=\"language-text\">2018-32</code> instead of <code class=\"language-text\">2018-32.txt</code>),</li>\n<li>I wanted to display the month corresponding to the week number to make the list more readable.</li>\n</ul>\n<p><a href=\"https://en.wikipedia.org/wiki/ISO_week_date#Calculating_the_week_number_of_a_given_date\">Display the month as from the week number</a> with <code class=\"language-text\">date</code> has been the most complicated part of that <code class=\"language-text\">did</code> improvement day!</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token keyword\">function</span> week2Month<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token function\">export</span> LC_ALL<span class=\"token operator\">=</span>C\n    year<span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token keyword\">echo</span> $1 <span class=\"token operator\">|</span> <span class=\"token function\">cut</span> -f1 -d-<span class=\"token variable\">)</span></span>\n    week<span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token keyword\">echo</span> $1 <span class=\"token operator\">|</span> <span class=\"token function\">cut</span> -f2 -d-<span class=\"token variable\">)</span></span>\n    local dayofweek<span class=\"token operator\">=</span>1 <span class=\"token comment\"># 1 for monday</span>\n    <span class=\"token function\">date</span> -d <span class=\"token string\">\"<span class=\"token variable\">$year</span>-01-01 +<span class=\"token variable\"><span class=\"token variable\">$((</span> $week <span class=\"token operator\">*</span> <span class=\"token number\">7</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span> <span class=\"token operator\">-</span> $<span class=\"token punctuation\">(</span>date <span class=\"token operator\">-</span>d \"$year<span class=\"token operator\">-</span><span class=\"token number\">01</span><span class=\"token operator\">-</span><span class=\"token number\">04</span>\" <span class=\"token operator\">+</span><span class=\"token operator\">%</span>w <span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">3</span> <span class=\"token variable\">))</span></span> days -2 days + <span class=\"token variable\">$dayofweek</span> days\"</span> +<span class=\"token string\">\"%B %Y\"</span>\n    unset LC_ALL\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> didl<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">for</span> <span class=\"token function\">file</span> <span class=\"token keyword\">in</span> <span class=\"token variable\"><span class=\"token variable\">`</span><span class=\"token function\">ls</span> $<span class=\"token punctuation\">{</span>DID_PATH<span class=\"token punctuation\">}</span>/*.txt <span class=\"token operator\">|</span> <span class=\"token function\">sort</span> -Vr<span class=\"token variable\">`</span></span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">do</span>\n        filenameRaw<span class=\"token operator\">=</span><span class=\"token string\">\"<span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">basename</span> $<span class=\"token punctuation\">{</span>file<span class=\"token punctuation\">}</span><span class=\"token variable\">)</span></span>\"</span>\n        filename<span class=\"token operator\">=</span><span class=\"token string\">\"<span class=\"token variable\">${filenameRaw%.*}</span>\"</span>\n        <span class=\"token keyword\">echo</span> <span class=\"token string\">\"<span class=\"token variable\">${filename}</span> (<span class=\"token variable\"><span class=\"token variable\">$(</span>week2Month $<span class=\"token punctuation\">{</span>filename<span class=\"token punctuation\">}</span><span class=\"token variable\">)</span></span>)\"</span>\n    <span class=\"token keyword\">done</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><img src=\"/images/blog/dev-diary/didl.gif\" alt=\"didl\"></p>\n<h2>Search the weekly logbooks: dids (search)</h2>\n<p>And here we are at the last feature to implement: search the logs. It's <code class=\"language-text\">grep</code> that is involved.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token keyword\">function</span> dids<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token function\">export</span> LC_ALL<span class=\"token operator\">=</span>C\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token variable\">$1</span> <span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">then</span>\n        <span class=\"token keyword\">for</span> <span class=\"token function\">file</span> <span class=\"token keyword\">in</span> <span class=\"token variable\"><span class=\"token variable\">`</span><span class=\"token function\">ls</span> $<span class=\"token punctuation\">{</span>DID_PATH<span class=\"token punctuation\">}</span>/*.txt <span class=\"token operator\">|</span> <span class=\"token function\">sort</span> -Vr<span class=\"token variable\">`</span></span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">do</span>\n            NB_OCCURENCE<span class=\"token operator\">=</span><span class=\"token string\">\"<span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">grep</span> -c @$<span class=\"token punctuation\">{</span>1<span class=\"token punctuation\">}</span> $<span class=\"token punctuation\">{</span>file<span class=\"token punctuation\">}</span><span class=\"token variable\">)</span></span>\"</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token variable\">${NB_OCCURENCE}</span> <span class=\"token operator\">!=</span> <span class=\"token string\">\"0\"</span> <span class=\"token punctuation\">]</span>\n            <span class=\"token keyword\">then</span>\n                filenameRaw<span class=\"token operator\">=</span><span class=\"token string\">\"<span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">basename</span> $<span class=\"token punctuation\">{</span>file<span class=\"token punctuation\">}</span><span class=\"token variable\">)</span></span>\"</span>\n                filename<span class=\"token operator\">=</span><span class=\"token string\">\"<span class=\"token variable\">${filenameRaw%.*}</span>\"</span>\n                <span class=\"token keyword\">echo</span> -e <span class=\"token string\">\"\\n\\e[32m=> <span class=\"token variable\">${filename}</span> (<span class=\"token variable\"><span class=\"token variable\">$(</span>week2Month $<span class=\"token punctuation\">{</span>filename<span class=\"token punctuation\">}</span><span class=\"token variable\">)</span></span>, <span class=\"token variable\">${NB_OCCURENCE}</span> results) \\e[0m\"</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">grep</span> -n -B 1 <span class=\"token variable\">${1}</span> <span class=\"token variable\">${file}</span>\n            <span class=\"token keyword\">fi</span>\n        <span class=\"token keyword\">done</span>\n    <span class=\"token keyword\">else</span>\n         <span class=\"token keyword\">echo</span> <span class=\"token string\">\"You must add a something to search...\"</span>\n    <span class=\"token keyword\">fi</span>\n    <span class=\"token function\">export</span> LC_ALL<span class=\"token operator\">=</span>C\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>To be able to tag notes and limit the search to these tags, I decided to use a tag's prefix <code class=\"language-text\">@</code>, allowing to do <code class=\"language-text\">NB_OCCURENCE=&quot;$(grep -c @${1} ${file})&quot;</code>. The second use of <code class=\"language-text\">grep</code> no longer uses this prefix, allowing to display all the lines corresponding to the searched word.</p>\n<p><img src=\"/images/blog/dev-diary/dids_tag.gif\" alt=\"dids\"></p>\n<h2>Formatting notes</h2>\n<p>I was close to the goal! I no longer had one, but 4 commands:</p>\n<ul>\n<li><code class=\"language-text\">did</code> to open the current logbook on the current date;</li>\n<li><code class=\"language-text\">didv</code> to view a logbook including the former ones,</li>\n<li><code class=\"language-text\">didl</code> to list all available logbooks in a readable way,</li>\n<li><code class=\"language-text\">dids</code> to do a search in all the logs.</li>\n</ul>\n<p>Only one point was still pending:</p>\n<blockquote>\n<p>The file is in.txt format, which severely limits the possibilities of formatting, such as code extracts.</p>\n</blockquote>\n<p>A markup language is perfectly adapted for that: <a href=\"https://www.markdownguide.org/\"><strong>markdown</strong></a>.</p>\n<p><img src=\"/images/blog/dev-diary/markdown.jpg\" alt=\"Markdown everywhere\"></p>\n<p>No luck, there's no basic tool in the terminal to process and display a <code class=\"language-text\">.md</code> file. However, I had set myself a rule:</p>\n<blockquote>\n<p><em>\"..., and continuing to use only what was already available in the terminal.\"</em></p>\n</blockquote>\n<p>It doesn't matter, I'm a punk. </p>\n<p>So I found some projects that met the need :</p>\n<ul>\n<li><a href=\"https://tosbourn.com/view-markdown-files-terminal/\">Pandoc et Lynx</a></li>\n<li><a href=\"https://github.com/axiros/terminal_markdown_viewer\">mdv</a></li>\n<li><a href=\"https://github.com/cpascoe95/vmd\">vmd</a></li>\n</ul>\n<p>I preferred the <code class=\"language-text\">vmd</code> rendering. All that remained was to modify all the <code class=\"language-text\">.txt</code> to <code class=\"language-text\">.md</code>, add some <code class=\"language-text\">#</code> and replace <code class=\"language-text\">cat</code> by <code class=\"language-text\">vmd</code> in the <code class=\"language-text\">didv</code> function.</p>\n<p><img src=\"/images/blog/dev-diary/didv_markdown.gif\" alt=\"didv in markdown\"></p>\n<h2>The final scripts</h2>\n<p><div id=\"gist90924037\" class=\"gist\">\n    <div class=\"gist-file\">\n      <div class=\"gist-data\">\n        <div class=\"js-gist-file-update-container js-task-list-container file-box\">\n  <div id=\"file-zshrc\" class=\"file\">\n    \n\n  <div itemprop=\"text\" class=\"blob-wrapper data type-shell \">\n      <table class=\"highlight tab-size js-file-line-container\" data-tab-size=\"8\">\n      <tr>\n        <td id=\"file-zshrc-L1\" class=\"blob-num js-line-number\" data-line-number=\"1\"></td>\n        <td id=\"file-zshrc-LC1\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-c\"><span class=\"pl-c\">#</span> What did i do today?</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-zshrc-L2\" class=\"blob-num js-line-number\" data-line-number=\"2\"></td>\n        <td id=\"file-zshrc-LC2\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-c\"><span class=\"pl-c\">#</span> from https://theptrk.com/2018/07/11/did-txt-file/</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-zshrc-L3\" class=\"blob-num js-line-number\" data-line-number=\"3\"></td>\n        <td id=\"file-zshrc-LC3\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-k\">export</span> MDV_THEME=729.8953</td>\n      </tr>\n      <tr>\n        <td id=\"file-zshrc-L4\" class=\"blob-num js-line-number\" data-line-number=\"4\"></td>\n        <td id=\"file-zshrc-LC4\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-k\">export</span> DID_PATH=<span class=\"pl-k\">~</span>/.did</td>\n      </tr>\n      <tr>\n        <td id=\"file-zshrc-L5\" class=\"blob-num js-line-number\" data-line-number=\"5\"></td>\n        <td id=\"file-zshrc-LC5\" class=\"blob-code blob-code-inner js-file-line\">\n</td>\n      </tr>\n      <tr>\n        <td id=\"file-zshrc-L6\" class=\"blob-num js-line-number\" data-line-number=\"6\"></td>\n        <td id=\"file-zshrc-LC6\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-k\">function</span> <span class=\"pl-en\">did(){</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-zshrc-L7\" class=\"blob-num js-line-number\" data-line-number=\"7\"></td>\n        <td id=\"file-zshrc-LC7\" class=\"blob-code blob-code-inner js-file-line\">    <span class=\"pl-k\">export</span> LC_ALL=C</td>\n      </tr>\n      <tr>\n        <td id=\"file-zshrc-L8\" class=\"blob-num js-line-number\" data-line-number=\"8\"></td>\n        <td id=\"file-zshrc-LC8\" class=\"blob-code blob-code-inner js-file-line\">    mkdir -p <span class=\"pl-smi\">${DID_PATH}</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-zshrc-L9\" class=\"blob-num js-line-number\" data-line-number=\"9\"></td>\n        <td id=\"file-zshrc-LC9\" class=\"blob-code blob-code-inner js-file-line\">    <span class=\"pl-k\">if</span> [ <span class=\"pl-k\">!</span> <span class=\"pl-k\">-f</span> <span class=\"pl-smi\">${DID_PATH}</span>/<span class=\"pl-s\"><span class=\"pl-pds\">$(</span>date +%Y-%V<span class=\"pl-pds\">)</span></span>.md ]<span class=\"pl-k\">;</span> <span class=\"pl-k\">then</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-zshrc-L10\" class=\"blob-num js-line-number\" data-line-number=\"10\"></td>\n        <td id=\"file-zshrc-LC10\" class=\"blob-code blob-code-inner js-file-line\">        <span class=\"pl-c1\">echo</span> <span class=\"pl-s\"><span class=\"pl-pds\">&quot;</span># Week <span class=\"pl-s\"><span class=\"pl-pds\">$(</span>date +<span class=\"pl-s\"><span class=\"pl-pds\">&quot;</span>%V (%B %Y)<span class=\"pl-pds\">&quot;</span></span><span class=\"pl-pds\">)</span></span> \\n\\n## <span class=\"pl-s\"><span class=\"pl-pds\">$(</span>date +<span class=\"pl-s\"><span class=\"pl-pds\">&quot;</span>%A %Y-%m-%d<span class=\"pl-pds\">&quot;</span></span><span class=\"pl-pds\">)</span></span><span class=\"pl-pds\">&quot;</span></span> <span class=\"pl-k\">&gt;</span> <span class=\"pl-smi\">${DID_PATH}</span>/<span class=\"pl-s\"><span class=\"pl-pds\">$(</span>date +%Y-%V<span class=\"pl-pds\">)</span></span>.md</td>\n      </tr>\n      <tr>\n        <td id=\"file-zshrc-L11\" class=\"blob-num js-line-number\" data-line-number=\"11\"></td>\n        <td id=\"file-zshrc-LC11\" class=\"blob-code blob-code-inner js-file-line\">    <span class=\"pl-k\">fi</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-zshrc-L12\" class=\"blob-num js-line-number\" data-line-number=\"12\"></td>\n        <td id=\"file-zshrc-LC12\" class=\"blob-code blob-code-inner js-file-line\">    FILE_EDITION_DATE=<span class=\"pl-s\"><span class=\"pl-pds\">&quot;</span><span class=\"pl-s\"><span class=\"pl-pds\">$(</span>stat -c <span class=\"pl-s\"><span class=\"pl-pds\">&quot;</span>%y<span class=\"pl-pds\">&quot;</span></span> <span class=\"pl-smi\">${DID_PATH}</span>/<span class=\"pl-s\"><span class=\"pl-pds\">$(</span>date +%Y-%V<span class=\"pl-pds\">)</span></span>.md<span class=\"pl-pds\">)</span></span><span class=\"pl-pds\">&quot;</span></span></td>\n      </tr>\n      <tr>\n        <td id=\"file-zshrc-L13\" class=\"blob-num js-line-number\" data-line-number=\"13\"></td>\n        <td id=\"file-zshrc-LC13\" class=\"blob-code blob-code-inner js-file-line\">    NOW=<span class=\"pl-s\"><span class=\"pl-pds\">&quot;</span><span class=\"pl-s\"><span class=\"pl-pds\">$(</span>date +<span class=\"pl-s\"><span class=\"pl-pds\">&quot;</span>%Y-%m-%d<span class=\"pl-pds\">&quot;</span></span><span class=\"pl-pds\">)</span></span><span class=\"pl-pds\">&quot;</span></span></td>\n      </tr>\n      <tr>\n        <td id=\"file-zshrc-L14\" class=\"blob-num js-line-number\" data-line-number=\"14\"></td>\n        <td id=\"file-zshrc-LC14\" class=\"blob-code blob-code-inner js-file-line\">    <span class=\"pl-k\">if</span> [ <span class=\"pl-smi\">${FILE_EDITION_DATE<span class=\"pl-k\">:</span>0<span class=\"pl-k\">:</span>10}</span> <span class=\"pl-k\">!=</span> <span class=\"pl-smi\">${NOW}</span> ]</td>\n      </tr>\n      <tr>\n        <td id=\"file-zshrc-L15\" class=\"blob-num js-line-number\" data-line-number=\"15\"></td>\n        <td id=\"file-zshrc-LC15\" class=\"blob-code blob-code-inner js-file-line\">    <span class=\"pl-k\">then</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-zshrc-L16\" class=\"blob-num js-line-number\" data-line-number=\"16\"></td>\n        <td id=\"file-zshrc-LC16\" class=\"blob-code blob-code-inner js-file-line\">        <span class=\"pl-c1\">echo</span> <span class=\"pl-s\"><span class=\"pl-pds\">&quot;</span>\\n## <span class=\"pl-s\"><span class=\"pl-pds\">$(</span>date +<span class=\"pl-s\"><span class=\"pl-pds\">&quot;</span>%A %Y-%m-%d<span class=\"pl-pds\">&quot;</span></span><span class=\"pl-pds\">)</span></span>\\n<span class=\"pl-pds\">&quot;</span></span> <span class=\"pl-k\">&gt;&gt;</span> <span class=\"pl-smi\">${DID_PATH}</span>/<span class=\"pl-s\"><span class=\"pl-pds\">$(</span>date +%Y-%V<span class=\"pl-pds\">)</span></span>.md</td>\n      </tr>\n      <tr>\n        <td id=\"file-zshrc-L17\" class=\"blob-num js-line-number\" data-line-number=\"17\"></td>\n        <td id=\"file-zshrc-LC17\" class=\"blob-code blob-code-inner js-file-line\">    <span class=\"pl-k\">fi</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-zshrc-L18\" class=\"blob-num js-line-number\" data-line-number=\"18\"></td>\n        <td id=\"file-zshrc-LC18\" class=\"blob-code blob-code-inner js-file-line\">    <span class=\"pl-c1\">unset</span> LC_ALL</td>\n      </tr>\n      <tr>\n        <td id=\"file-zshrc-L19\" class=\"blob-num js-line-number\" data-line-number=\"19\"></td>\n        <td id=\"file-zshrc-LC19\" class=\"blob-code blob-code-inner js-file-line\">    vim +<span class=\"pl-s\"><span class=\"pl-pds\">&#39;</span>normal Go<span class=\"pl-pds\">&#39;</span></span> <span class=\"pl-smi\">${DID_PATH}</span>/<span class=\"pl-s\"><span class=\"pl-pds\">$(</span>date +%Y-%V<span class=\"pl-pds\">)</span></span>.md</td>\n      </tr>\n      <tr>\n        <td id=\"file-zshrc-L20\" class=\"blob-num js-line-number\" data-line-number=\"20\"></td>\n        <td id=\"file-zshrc-LC20\" class=\"blob-code blob-code-inner js-file-line\">}</td>\n      </tr>\n      <tr>\n        <td id=\"file-zshrc-L21\" class=\"blob-num js-line-number\" data-line-number=\"21\"></td>\n        <td id=\"file-zshrc-LC21\" class=\"blob-code blob-code-inner js-file-line\">\n</td>\n      </tr>\n      <tr>\n        <td id=\"file-zshrc-L22\" class=\"blob-num js-line-number\" data-line-number=\"22\"></td>\n        <td id=\"file-zshrc-LC22\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-k\">function</span> <span class=\"pl-en\">didv(){</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-zshrc-L23\" class=\"blob-num js-line-number\" data-line-number=\"23\"></td>\n        <td id=\"file-zshrc-LC23\" class=\"blob-code blob-code-inner js-file-line\">    <span class=\"pl-k\">if</span> [ <span class=\"pl-smi\">$1</span> ]</td>\n      </tr>\n      <tr>\n        <td id=\"file-zshrc-L24\" class=\"blob-num js-line-number\" data-line-number=\"24\"></td>\n        <td id=\"file-zshrc-LC24\" class=\"blob-code blob-code-inner js-file-line\">    <span class=\"pl-k\">then</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-zshrc-L25\" class=\"blob-num js-line-number\" data-line-number=\"25\"></td>\n        <td id=\"file-zshrc-LC25\" class=\"blob-code blob-code-inner js-file-line\">         vmd <span class=\"pl-smi\">${DID_PATH}</span>/<span class=\"pl-smi\">${1}</span>.md</td>\n      </tr>\n      <tr>\n        <td id=\"file-zshrc-L26\" class=\"blob-num js-line-number\" data-line-number=\"26\"></td>\n        <td id=\"file-zshrc-LC26\" class=\"blob-code blob-code-inner js-file-line\">    <span class=\"pl-k\">else</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-zshrc-L27\" class=\"blob-num js-line-number\" data-line-number=\"27\"></td>\n        <td id=\"file-zshrc-LC27\" class=\"blob-code blob-code-inner js-file-line\">        mkdir -p <span class=\"pl-smi\">${DID_PATH}</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-zshrc-L28\" class=\"blob-num js-line-number\" data-line-number=\"28\"></td>\n        <td id=\"file-zshrc-LC28\" class=\"blob-code blob-code-inner js-file-line\">        <span class=\"pl-k\">if</span> [ <span class=\"pl-k\">!</span> <span class=\"pl-k\">-f</span> <span class=\"pl-smi\">${DID_PATH}</span>/<span class=\"pl-s\"><span class=\"pl-pds\">$(</span>date +%Y-%V<span class=\"pl-pds\">)</span></span>.md ]<span class=\"pl-k\">;</span> <span class=\"pl-k\">then</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-zshrc-L29\" class=\"blob-num js-line-number\" data-line-number=\"29\"></td>\n        <td id=\"file-zshrc-LC29\" class=\"blob-code blob-code-inner js-file-line\">            LC_ALL=C <span class=\"pl-c1\">echo</span> <span class=\"pl-s\"><span class=\"pl-pds\">&quot;</span># Week <span class=\"pl-s\"><span class=\"pl-pds\">$(</span>date +<span class=\"pl-s\"><span class=\"pl-pds\">&quot;</span>%V (%B %Y)<span class=\"pl-pds\">&quot;</span></span><span class=\"pl-pds\">)</span></span> \\n\\n## <span class=\"pl-s\"><span class=\"pl-pds\">$(</span>date +<span class=\"pl-s\"><span class=\"pl-pds\">&quot;</span>%A %Y-%m-%d<span class=\"pl-pds\">&quot;</span></span><span class=\"pl-pds\">)</span></span><span class=\"pl-pds\">&quot;</span></span> <span class=\"pl-k\">&gt;</span> <span class=\"pl-smi\">${DID_PATH}</span>/<span class=\"pl-s\"><span class=\"pl-pds\">$(</span>date +%Y-%V<span class=\"pl-pds\">)</span></span>.md</td>\n      </tr>\n      <tr>\n        <td id=\"file-zshrc-L30\" class=\"blob-num js-line-number\" data-line-number=\"30\"></td>\n        <td id=\"file-zshrc-LC30\" class=\"blob-code blob-code-inner js-file-line\">        <span class=\"pl-k\">fi</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-zshrc-L31\" class=\"blob-num js-line-number\" data-line-number=\"31\"></td>\n        <td id=\"file-zshrc-LC31\" class=\"blob-code blob-code-inner js-file-line\">        vmd <span class=\"pl-smi\">${DID_PATH}</span>/<span class=\"pl-s\"><span class=\"pl-pds\">$(</span>date +%Y-%V<span class=\"pl-pds\">)</span></span>.md</td>\n      </tr>\n      <tr>\n        <td id=\"file-zshrc-L32\" class=\"blob-num js-line-number\" data-line-number=\"32\"></td>\n        <td id=\"file-zshrc-LC32\" class=\"blob-code blob-code-inner js-file-line\">    <span class=\"pl-k\">fi</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-zshrc-L33\" class=\"blob-num js-line-number\" data-line-number=\"33\"></td>\n        <td id=\"file-zshrc-LC33\" class=\"blob-code blob-code-inner js-file-line\">}</td>\n      </tr>\n      <tr>\n        <td id=\"file-zshrc-L34\" class=\"blob-num js-line-number\" data-line-number=\"34\"></td>\n        <td id=\"file-zshrc-LC34\" class=\"blob-code blob-code-inner js-file-line\">\n</td>\n      </tr>\n      <tr>\n        <td id=\"file-zshrc-L35\" class=\"blob-num js-line-number\" data-line-number=\"35\"></td>\n        <td id=\"file-zshrc-LC35\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-k\">function</span> <span class=\"pl-en\">week2Month(){</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-zshrc-L36\" class=\"blob-num js-line-number\" data-line-number=\"36\"></td>\n        <td id=\"file-zshrc-LC36\" class=\"blob-code blob-code-inner js-file-line\">    <span class=\"pl-k\">export</span> LC_ALL=C</td>\n      </tr>\n      <tr>\n        <td id=\"file-zshrc-L37\" class=\"blob-num js-line-number\" data-line-number=\"37\"></td>\n        <td id=\"file-zshrc-LC37\" class=\"blob-code blob-code-inner js-file-line\">    year=<span class=\"pl-s\"><span class=\"pl-pds\">$(</span>echo <span class=\"pl-smi\">$1</span> <span class=\"pl-k\">|</span> cut -f1 -d-<span class=\"pl-pds\">)</span></span></td>\n      </tr>\n      <tr>\n        <td id=\"file-zshrc-L38\" class=\"blob-num js-line-number\" data-line-number=\"38\"></td>\n        <td id=\"file-zshrc-LC38\" class=\"blob-code blob-code-inner js-file-line\">    week=<span class=\"pl-s\"><span class=\"pl-pds\">$(</span>echo <span class=\"pl-smi\">$1</span> <span class=\"pl-k\">|</span> cut -f2 -d-<span class=\"pl-pds\">)</span></span></td>\n      </tr>\n      <tr>\n        <td id=\"file-zshrc-L39\" class=\"blob-num js-line-number\" data-line-number=\"39\"></td>\n        <td id=\"file-zshrc-LC39\" class=\"blob-code blob-code-inner js-file-line\">    <span class=\"pl-k\">local</span> dayofweek=1 <span class=\"pl-c\"><span class=\"pl-c\">#</span> 1 for monday</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-zshrc-L40\" class=\"blob-num js-line-number\" data-line-number=\"40\"></td>\n        <td id=\"file-zshrc-LC40\" class=\"blob-code blob-code-inner js-file-line\">    date -d <span class=\"pl-s\"><span class=\"pl-pds\">&quot;</span><span class=\"pl-smi\">$year</span>-01-01 +<span class=\"pl-s\"><span class=\"pl-pds\">$((</span> <span class=\"pl-smi\">$week</span> <span class=\"pl-k\">*</span> <span class=\"pl-c1\">7</span> <span class=\"pl-k\">+</span> <span class=\"pl-c1\">1</span> <span class=\"pl-k\">-</span> $(date <span class=\"pl-k\">-</span>d &quot;<span class=\"pl-smi\">$year</span><span class=\"pl-k\">-</span><span class=\"pl-c1\">01</span><span class=\"pl-k\">-</span><span class=\"pl-c1\">04</span>&quot; <span class=\"pl-k\">+%</span>w ) <span class=\"pl-k\">-</span> <span class=\"pl-c1\">3</span> <span class=\"pl-pds\">))</span></span> days -2 days + <span class=\"pl-smi\">$dayofweek</span> days<span class=\"pl-pds\">&quot;</span></span> +<span class=\"pl-s\"><span class=\"pl-pds\">&quot;</span>%B %Y<span class=\"pl-pds\">&quot;</span></span></td>\n      </tr>\n      <tr>\n        <td id=\"file-zshrc-L41\" class=\"blob-num js-line-number\" data-line-number=\"41\"></td>\n        <td id=\"file-zshrc-LC41\" class=\"blob-code blob-code-inner js-file-line\">    <span class=\"pl-c1\">unset</span> LC_ALL</td>\n      </tr>\n      <tr>\n        <td id=\"file-zshrc-L42\" class=\"blob-num js-line-number\" data-line-number=\"42\"></td>\n        <td id=\"file-zshrc-LC42\" class=\"blob-code blob-code-inner js-file-line\">}</td>\n      </tr>\n      <tr>\n        <td id=\"file-zshrc-L43\" class=\"blob-num js-line-number\" data-line-number=\"43\"></td>\n        <td id=\"file-zshrc-LC43\" class=\"blob-code blob-code-inner js-file-line\">\n</td>\n      </tr>\n      <tr>\n        <td id=\"file-zshrc-L44\" class=\"blob-num js-line-number\" data-line-number=\"44\"></td>\n        <td id=\"file-zshrc-LC44\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-k\">function</span> <span class=\"pl-en\">didl(){</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-zshrc-L45\" class=\"blob-num js-line-number\" data-line-number=\"45\"></td>\n        <td id=\"file-zshrc-LC45\" class=\"blob-code blob-code-inner js-file-line\">    <span class=\"pl-k\">for</span> <span class=\"pl-smi\">file</span> <span class=\"pl-k\">in</span> <span class=\"pl-s\"><span class=\"pl-pds\">`</span>ls <span class=\"pl-smi\">${DID_PATH}</span>/<span class=\"pl-k\">*</span>.md <span class=\"pl-k\">|</span> sort -Vr<span class=\"pl-pds\">`</span></span><span class=\"pl-k\">;</span> <span class=\"pl-k\">do</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-zshrc-L46\" class=\"blob-num js-line-number\" data-line-number=\"46\"></td>\n        <td id=\"file-zshrc-LC46\" class=\"blob-code blob-code-inner js-file-line\">        filenameRaw=<span class=\"pl-s\"><span class=\"pl-pds\">&quot;</span><span class=\"pl-s\"><span class=\"pl-pds\">$(</span>basename <span class=\"pl-smi\">${file}</span><span class=\"pl-pds\">)</span></span><span class=\"pl-pds\">&quot;</span></span></td>\n      </tr>\n      <tr>\n        <td id=\"file-zshrc-L47\" class=\"blob-num js-line-number\" data-line-number=\"47\"></td>\n        <td id=\"file-zshrc-LC47\" class=\"blob-code blob-code-inner js-file-line\">        filename=<span class=\"pl-s\"><span class=\"pl-pds\">&quot;</span><span class=\"pl-smi\">${filenameRaw<span class=\"pl-k\">%</span>.<span class=\"pl-k\">*</span>}</span><span class=\"pl-pds\">&quot;</span></span></td>\n      </tr>\n      <tr>\n        <td id=\"file-zshrc-L48\" class=\"blob-num js-line-number\" data-line-number=\"48\"></td>\n        <td id=\"file-zshrc-LC48\" class=\"blob-code blob-code-inner js-file-line\">        <span class=\"pl-c1\">echo</span> <span class=\"pl-s\"><span class=\"pl-pds\">&quot;</span><span class=\"pl-smi\">${filename}</span> (<span class=\"pl-s\"><span class=\"pl-pds\">$(</span>week2Month <span class=\"pl-smi\">${filename}</span><span class=\"pl-pds\">)</span></span>)<span class=\"pl-pds\">&quot;</span></span></td>\n      </tr>\n      <tr>\n        <td id=\"file-zshrc-L49\" class=\"blob-num js-line-number\" data-line-number=\"49\"></td>\n        <td id=\"file-zshrc-LC49\" class=\"blob-code blob-code-inner js-file-line\">    <span class=\"pl-k\">done</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-zshrc-L50\" class=\"blob-num js-line-number\" data-line-number=\"50\"></td>\n        <td id=\"file-zshrc-LC50\" class=\"blob-code blob-code-inner js-file-line\">}</td>\n      </tr>\n      <tr>\n        <td id=\"file-zshrc-L51\" class=\"blob-num js-line-number\" data-line-number=\"51\"></td>\n        <td id=\"file-zshrc-LC51\" class=\"blob-code blob-code-inner js-file-line\">\n</td>\n      </tr>\n      <tr>\n        <td id=\"file-zshrc-L52\" class=\"blob-num js-line-number\" data-line-number=\"52\"></td>\n        <td id=\"file-zshrc-LC52\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-k\">function</span> <span class=\"pl-en\">dids(){</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-zshrc-L53\" class=\"blob-num js-line-number\" data-line-number=\"53\"></td>\n        <td id=\"file-zshrc-LC53\" class=\"blob-code blob-code-inner js-file-line\">    <span class=\"pl-k\">export</span> LC_ALL=C</td>\n      </tr>\n      <tr>\n        <td id=\"file-zshrc-L54\" class=\"blob-num js-line-number\" data-line-number=\"54\"></td>\n        <td id=\"file-zshrc-LC54\" class=\"blob-code blob-code-inner js-file-line\">    <span class=\"pl-k\">if</span> [ <span class=\"pl-smi\">$1</span> ]</td>\n      </tr>\n      <tr>\n        <td id=\"file-zshrc-L55\" class=\"blob-num js-line-number\" data-line-number=\"55\"></td>\n        <td id=\"file-zshrc-LC55\" class=\"blob-code blob-code-inner js-file-line\">    <span class=\"pl-k\">then</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-zshrc-L56\" class=\"blob-num js-line-number\" data-line-number=\"56\"></td>\n        <td id=\"file-zshrc-LC56\" class=\"blob-code blob-code-inner js-file-line\">        <span class=\"pl-k\">for</span> <span class=\"pl-smi\">file</span> <span class=\"pl-k\">in</span> <span class=\"pl-s\"><span class=\"pl-pds\">`</span>ls <span class=\"pl-smi\">${DID_PATH}</span>/<span class=\"pl-k\">*</span>.md <span class=\"pl-k\">|</span> sort -Vr<span class=\"pl-pds\">`</span></span><span class=\"pl-k\">;</span> <span class=\"pl-k\">do</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-zshrc-L57\" class=\"blob-num js-line-number\" data-line-number=\"57\"></td>\n        <td id=\"file-zshrc-LC57\" class=\"blob-code blob-code-inner js-file-line\">            NB_OCCURENCE=<span class=\"pl-s\"><span class=\"pl-pds\">&quot;</span><span class=\"pl-s\"><span class=\"pl-pds\">$(</span>grep -c <span class=\"pl-smi\">${1}</span> <span class=\"pl-smi\">${file}</span><span class=\"pl-pds\">)</span></span><span class=\"pl-pds\">&quot;</span></span></td>\n      </tr>\n      <tr>\n        <td id=\"file-zshrc-L58\" class=\"blob-num js-line-number\" data-line-number=\"58\"></td>\n        <td id=\"file-zshrc-LC58\" class=\"blob-code blob-code-inner js-file-line\">            <span class=\"pl-k\">if</span> [ <span class=\"pl-smi\">${NB_OCCURENCE}</span> <span class=\"pl-k\">!=</span> <span class=\"pl-s\"><span class=\"pl-pds\">&quot;</span>0<span class=\"pl-pds\">&quot;</span></span> ]</td>\n      </tr>\n      <tr>\n        <td id=\"file-zshrc-L59\" class=\"blob-num js-line-number\" data-line-number=\"59\"></td>\n        <td id=\"file-zshrc-LC59\" class=\"blob-code blob-code-inner js-file-line\">            <span class=\"pl-k\">then</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-zshrc-L60\" class=\"blob-num js-line-number\" data-line-number=\"60\"></td>\n        <td id=\"file-zshrc-LC60\" class=\"blob-code blob-code-inner js-file-line\">                filenameRaw=<span class=\"pl-s\"><span class=\"pl-pds\">&quot;</span><span class=\"pl-s\"><span class=\"pl-pds\">$(</span>basename <span class=\"pl-smi\">${file}</span><span class=\"pl-pds\">)</span></span><span class=\"pl-pds\">&quot;</span></span></td>\n      </tr>\n      <tr>\n        <td id=\"file-zshrc-L61\" class=\"blob-num js-line-number\" data-line-number=\"61\"></td>\n        <td id=\"file-zshrc-LC61\" class=\"blob-code blob-code-inner js-file-line\">                filename=<span class=\"pl-s\"><span class=\"pl-pds\">&quot;</span><span class=\"pl-smi\">${filenameRaw<span class=\"pl-k\">%</span>.<span class=\"pl-k\">*</span>}</span><span class=\"pl-pds\">&quot;</span></span></td>\n      </tr>\n      <tr>\n        <td id=\"file-zshrc-L62\" class=\"blob-num js-line-number\" data-line-number=\"62\"></td>\n        <td id=\"file-zshrc-LC62\" class=\"blob-code blob-code-inner js-file-line\">                <span class=\"pl-c1\">echo</span> -e <span class=\"pl-s\"><span class=\"pl-pds\">&quot;</span>\\n\\e[32m=&gt; <span class=\"pl-smi\">${filename}</span> (<span class=\"pl-s\"><span class=\"pl-pds\">$(</span>week2Month <span class=\"pl-smi\">${filename}</span><span class=\"pl-pds\">)</span></span>, <span class=\"pl-smi\">${NB_OCCURENCE}</span> results) \\e[0m<span class=\"pl-pds\">&quot;</span></span> <span class=\"pl-k\">&amp;&amp;</span> grep -n -B 1 <span class=\"pl-smi\">${1}</span> <span class=\"pl-smi\">${file}</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-zshrc-L63\" class=\"blob-num js-line-number\" data-line-number=\"63\"></td>\n        <td id=\"file-zshrc-LC63\" class=\"blob-code blob-code-inner js-file-line\">            <span class=\"pl-k\">fi</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-zshrc-L64\" class=\"blob-num js-line-number\" data-line-number=\"64\"></td>\n        <td id=\"file-zshrc-LC64\" class=\"blob-code blob-code-inner js-file-line\">        <span class=\"pl-k\">done</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-zshrc-L65\" class=\"blob-num js-line-number\" data-line-number=\"65\"></td>\n        <td id=\"file-zshrc-LC65\" class=\"blob-code blob-code-inner js-file-line\">    <span class=\"pl-k\">else</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-zshrc-L66\" class=\"blob-num js-line-number\" data-line-number=\"66\"></td>\n        <td id=\"file-zshrc-LC66\" class=\"blob-code blob-code-inner js-file-line\">         <span class=\"pl-c1\">echo</span> <span class=\"pl-s\"><span class=\"pl-pds\">&quot;</span>You must add a something to search...<span class=\"pl-pds\">&quot;</span></span></td>\n      </tr>\n      <tr>\n        <td id=\"file-zshrc-L67\" class=\"blob-num js-line-number\" data-line-number=\"67\"></td>\n        <td id=\"file-zshrc-LC67\" class=\"blob-code blob-code-inner js-file-line\">    <span class=\"pl-k\">fi</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-zshrc-L68\" class=\"blob-num js-line-number\" data-line-number=\"68\"></td>\n        <td id=\"file-zshrc-LC68\" class=\"blob-code blob-code-inner js-file-line\">    <span class=\"pl-c1\">unset</span> LC_ALL</td>\n      </tr>\n      <tr>\n        <td id=\"file-zshrc-L69\" class=\"blob-num js-line-number\" data-line-number=\"69\"></td>\n        <td id=\"file-zshrc-LC69\" class=\"blob-code blob-code-inner js-file-line\">}</td>\n      </tr>\n</table>\n\n\n  </div>\n\n  </div>\n</div>\n\n      </div>\n      <div class=\"gist-meta\">\n        <a href=\"https://gist.github.com/alexisjanvier/bfe71d18f68434e29c08637e4d837c74/raw/3066ccdb524eb9c32ace266b26ca15182cf73c58/.zshrc\" style=\"float:right\">view raw</a>\n        <a href=\"https://gist.github.com/alexisjanvier/bfe71d18f68434e29c08637e4d837c74#file-zshrc\">.zshrc</a>\n        hosted with &#10084; by <a href=\"https://github.com\">GitHub</a>\n      </div>\n    </div>\n</div>\n</p>\n<h2>Conclusion</h2>\n<p>I don't know if my scripts can be useful to you. If so, I would be happy to. Otherwise, I would also be happy anyway.</p>\n<p>Because it's not the script that's important here. What I would like to have shared in this post is the pleasure of building your own little tool from what is available on your system. It's really very fun! During that day spent modifying the original did.txt, I learned a lot, tested a lot and came up with a result that was exactly what I needed. No more, no less.<br>\nIt was a bit of a <strong>low-dev</strong>. I'm very sensitive to <a href=\"https://www.arte.tv/fr/videos/RC-016865/les-escales-de-l-innovation/RC-014864/nomade-des-mers-les-tutos/\"><strong>low-tech</strong></a> these days.</p>\n<p>So I hope this reading has given you some ideas. As far as I'm concerned, I think I'm going to quickly add a <code class=\"language-text\">didp</code> command.</p>\n<p>Did you guess it? <code class=\"language-text\">p</code> for publishing! Now that I have log books in markdown, it shouldn't be very complicated to publish them on a server, and then add a search engine like <a href=\"https://www.algolia.com/products/search\">Algolia</a> to index them.</p>","frontmatter":{"cover":"devDiary.jpg","date":"2018-11-08","description":"I'm used to recording all the little things I learn from day to day as a developer. Since I didn't find the right note-taking tool to integrate in my daily routine, I coded it. Read on to see what I learned in the process.","slug":"a-developers-diary-building-a-notes-taking-app-in-shell","tags":["shell"],"title":"A Developer's Diary: Building A Notes Taking App in Shell"}}},"pageContext":{"slug":"a-developers-diary-building-a-notes-taking-app-in-shell"}}