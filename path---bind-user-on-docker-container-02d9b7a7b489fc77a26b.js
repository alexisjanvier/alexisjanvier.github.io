webpackJsonp([92891156285265],{387:function(e,n){e.exports={data:{markdownRemark:{html:'<p>L\'un des problèmes très classiques lorsque l\'on utilise Docker, c\'est que l\'utilisateur d\'un container est <code>root</code> par défaut. Du coup, on peut rencontrer des problèmes de droits sur les répertoires générés au sein de ce container.</p>\n<p>Par exemple, imaginons que nous utilisions un container pour faire le build d\'une application <em>create-react -app</em>: le répertoire <code>build</code> généré aura les droits de root au niveau du host. Si ce n\'est pas dramatique, c\'est parfois problématique, particulièrement si l\'on veut automatiser une tâche sur ce répertoire au niveau du host (par exemple via une recette make).</p>\n<div class="gatsby-highlight">\n      <pre class="language-makfile"><code>// in makefile\ndocker-build:\n    NODE_ENV=production docker-compose run --no-deps --rm client npm run build\n    NODE_ENV=production docker-compose run --no-deps --rm server npm run build\n    mkdir -p server/build/public\n    cp -rf client/build/* server/build/public/</code></pre>\n      </div>\n<p>Dans cette exemple, la commande <code>mkdir -p server/build/public</code> va échouer, car l\'utilisteur du <code>host</code> ne va pas avoir les droits d\'écriture au sein de <code>server/build/public</code>.</p>\n<p>On veut donc faire en sorte que l\'utilisateur du container soit le même (c\'est à dire ayant le même UID) que l\'utilisateur du <code>host</code>.</p>\n<h2>Première méthode</h2>\n<p>On peut transmettre l\'<code>uid/gid</code> d\'un <code>user</code> lorsque l\'on démarre un container:</p>\n<div class="gatsby-highlight">\n      <pre class="language-yaml"><code>// in docker<span class="token punctuation">-</span>compose.yml\n<span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token string">\'2\'</span>\n\n<span class="token key atrule">services</span><span class="token punctuation">:</span>\n    <span class="token key atrule">node</span><span class="token punctuation">:</span>\n        <span class="token key atrule">image</span><span class="token punctuation">:</span> node<span class="token punctuation">:</span>8.5<span class="token punctuation">-</span>alpine\n        <span class="token key atrule">volumes</span><span class="token punctuation">:</span>\n            <span class="token punctuation">-</span> .<span class="token punctuation">:</span>/app\n        <span class="token key atrule">ports</span><span class="token punctuation">:</span>\n            <span class="token punctuation">-</span> 3000<span class="token punctuation">:</span><span class="token number">3000</span>\n        <span class="token key atrule">working_dir</span><span class="token punctuation">:</span> <span class="token string">"/app"</span>\n        <span class="token key atrule">command</span><span class="token punctuation">:</span> <span class="token string">"npm start"</span>\n        <span class="token key atrule">user</span><span class="token punctuation">:</span> <span class="token string">"${UID}:${GID}"</span>\n</code></pre>\n      </div>\n<div class="gatsby-highlight">\n      <pre class="language-makefile"><code>// in makefile\n<span class="token keyword">export</span> UID <span class="token operator">=</span> <span class="token variable">$</span><span class="token punctuation">(</span>USER_ID<span class="token punctuation">)</span>\n<span class="token keyword">export</span> GID <span class="token operator">=</span> <span class="token variable">$</span><span class="token punctuation">(</span>GROUP_ID<span class="token punctuation">)</span>\n\n<span class="token symbol">docker-build</span><span class="token punctuation">:</span>\n\tdocker-compose run --no-deps --rm node npm run build\n</code></pre>\n      </div>\n<p>Cela marche, mais ce n\'est ni une méthode officielle ni une méthode très sécurisée.</p>\n<h2>La bonne méthode</h2>\n<p>On peut configurer au niveau de Docker le mapping des utilisateurs de container grâce à <em><a href="https://docs.docker.com/engine/security/userns-remap/">l\'espace de nom utilisateur</a></em> et le flag <code>userns-remap</code>.</p>\n<p>On va ainsi pouvoir indiquer à Docker un utilisateur qui sera mapper par défaut sur l\'utilisateur des containers. Il faut que cet utilisateur soit un utilisateur déclaré sur le système hôte.</p>\n<p>Pour un Docker lancé en <code>daemon</code>, il faut créer le fichier <code>/etc/docker/daemon.json</code> et déclarer l\'utilisateur à mapper grâce au flag <code>userns-remap</code></p>\n<div class="gatsby-highlight">\n      <pre class="language-ỳaml"><code>//in /etc/docker/daemon.json\n{\n  "userns-remap": "VALIDE_USER"\n}</code></pre>\n      </div>\n<p>Ensuite, il faut indiquer à Docker sur quels UID/GUID devront être attribués à cet utilisateur (par default 100000:10000, ce qui ne nous sera pas très utile).</p>\n<div class="gatsby-highlight">\n      <pre class="language-bash"><code>❯ <span class="token function">id</span> -u VALIDE_USER\n1000\n❯ getent group VALIDE_USER\nVALIDE_USER:x:1000:\n</code></pre>\n      </div>\n<div class="gatsby-highlight">\n      <pre class="language-none"><code>// in /etc/subuid\nVALIDE_USER:1000:1</code></pre>\n      </div>\n<div class="gatsby-highlight">\n      <pre class="language-none"><code>// in /etc/subgid\nVALIDE_USER:1000:1</code></pre>\n      </div>\n<p>Ne reste plus qu\'à redemarrer le service docker :</p>\n<div class="gatsby-highlight">\n      <pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">service</span> docker restart\n</code></pre>\n      </div>',frontmatter:{title:"Associer un utilisateur à celui d'un container Docker",date:"2017-09-22",tags:["docker"],description:"L'un des problèmes très classiques lorsque l'on utilise Docker, c'est que l'utilisateur d'un container est root par défaut. Du coup, on peut rencontrer des problèmes de droits sur les répertoires générés au sein de ce container."}}},pathContext:{slug:"bind-user-on-docker-container"}}}});
//# sourceMappingURL=path---bind-user-on-docker-container-02d9b7a7b489fc77a26b.js.map