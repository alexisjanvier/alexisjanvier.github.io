{"version":3,"sources":["webpack:///path---gasby-avec-docker-1861b4aae7844970b4b6.js","webpack:///./.cache/json/gasby-avec-docker.json"],"names":["webpackJsonp","404","module","exports","data","markdownRemark","html","frontmatter","title","date","tags","description","pathContext","slug"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,gBAAkBC,KAAA,6hHAA+iHC,aAAiHC,MAAA,0CAAAC,KAAA,aAAAC,MAAA,mBAAAC,YAAA,6MAA2TC,aAAgBC,KAAA","file":"path---gasby-avec-docker-1861b4aae7844970b4b6.js","sourcesContent":["webpackJsonp([218583586713429],{\n\n/***/ 404:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<p>Gatsby est un système de génération de site statique basé sur Node. En mode développement, il s'appuie sur le <code>webpack dev server</code> afin de se mettre à jours automatiquement.</p>\\n<p>Nous avons donc besoin d'une image docker permettant de lancer une commande node :</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-yaml\\\"><code>// in docker<span class=\\\"token punctuation\\\">-</span>compose.yml\\n<span class=\\\"token key atrule\\\">version</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'3'</span>\\n<span class=\\\"token key atrule\\\">services</span><span class=\\\"token punctuation\\\">:</span>\\n  <span class=\\\"token key atrule\\\">gatsby</span><span class=\\\"token punctuation\\\">:</span>\\n    <span class=\\\"token key atrule\\\">image</span><span class=\\\"token punctuation\\\">:</span> node<span class=\\\"token punctuation\\\">:</span>8<span class=\\\"token punctuation\\\">-</span>alpine\\n    <span class=\\\"token key atrule\\\">volumes</span><span class=\\\"token punctuation\\\">:</span>\\n      <span class=\\\"token punctuation\\\">-</span> .<span class=\\\"token punctuation\\\">:</span>/app\\n    <span class=\\\"token key atrule\\\">working_dir</span><span class=\\\"token punctuation\\\">:</span> /app\\n    <span class=\\\"token key atrule\\\">ports</span><span class=\\\"token punctuation\\\">:</span>\\n      <span class=\\\"token punctuation\\\">-</span> 8000<span class=\\\"token punctuation\\\">:</span><span class=\\\"token number\\\">8000</span>\\n    <span class=\\\"token key atrule\\\">command</span><span class=\\\"token punctuation\\\">:</span> npm run develop\\n</code></pre>\\n      </div>\\n<p>On va ensuite faciliter la vie des contributeurs avec un makefile</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-make\\\"><code>// in makefile\\n.PHONY: build help\\n\\nhelp:\\n\\t@grep -E '^[a-zA-Z0-9_-]+:.*?## .*$$' $(MAKEFILE_LIST) | sort | awk 'BEGIN {FS = \\\":.*?## \\\"}; {printf \\\"\\\\033[36m%-30s\\\\033[0m %s\\\\n\\\", $$1, $$2}'\\n\\ninstall: ## install dependencies with docker\\n\\t@docker-compose run --rm gatsby npm install\\n\\nstart: ## run gatsby in develop mode with docker\\n\\t@docker-compose up -d\\n\\nstop: ## stop gatsby in docker\\n\\t@docker-compose down\\n\\nlogs: ## Display logs from docker\\n\\t@docker-compose logs\\n\\nbuild: ## build site with docker\\n\\t@docker-compose run --rm gatsby npm run build</code></pre>\\n      </div>\\n<p>Ne reste donc plus qu'à lancer un <code>make start</code>. Mais là :</p>\\n<p><img src=\\\"/images/siteInaccessible.png\\\" alt=\\\"Site inaccessible\\\"></p>\\n<p>En effet, le <code>webpack dev server</code> gère très mal le localhost au sein du docker. Il faut donc modifier un peu la commande <code>develop</code> dans le <code>package.json</code> en ajoutant <code>--host 0.0.0.0</code> pour que webpack accepte toutes les requêtes:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-json\\\"><code>    <span class=\\\"token property\\\">\\\"scripts\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token property\\\">\\\"develop\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"gatsby develop --host 0.0.0.0\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token property\\\">\\\"build\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"gatsby build\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token property\\\">\\\"serve\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"gatsby serve\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n</code></pre>\\n      </div>\\n<p>Et voilà.</p>\",\"frontmatter\":{\"title\":\"Développer un site Gasby.js avec Docker\",\"date\":\"2017-11-06\",\"tags\":[\"Gatsby\",\"Docker\"],\"description\":\"En ce moment, j'utilise Gasby pour plusieurs sites (ce blog compris). Mais tous les contributeurs de ces sites ne veulent pas forcément installer Node sur leur machine. La solution évidente : Docker.\"}}},\"pathContext\":{\"slug\":\"gasby-avec-docker\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---gasby-avec-docker-1861b4aae7844970b4b6.js","module.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<p>Gatsby est un système de génération de site statique basé sur Node. En mode développement, il s'appuie sur le <code>webpack dev server</code> afin de se mettre à jours automatiquement.</p>\\n<p>Nous avons donc besoin d'une image docker permettant de lancer une commande node :</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-yaml\\\"><code>// in docker<span class=\\\"token punctuation\\\">-</span>compose.yml\\n<span class=\\\"token key atrule\\\">version</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'3'</span>\\n<span class=\\\"token key atrule\\\">services</span><span class=\\\"token punctuation\\\">:</span>\\n  <span class=\\\"token key atrule\\\">gatsby</span><span class=\\\"token punctuation\\\">:</span>\\n    <span class=\\\"token key atrule\\\">image</span><span class=\\\"token punctuation\\\">:</span> node<span class=\\\"token punctuation\\\">:</span>8<span class=\\\"token punctuation\\\">-</span>alpine\\n    <span class=\\\"token key atrule\\\">volumes</span><span class=\\\"token punctuation\\\">:</span>\\n      <span class=\\\"token punctuation\\\">-</span> .<span class=\\\"token punctuation\\\">:</span>/app\\n    <span class=\\\"token key atrule\\\">working_dir</span><span class=\\\"token punctuation\\\">:</span> /app\\n    <span class=\\\"token key atrule\\\">ports</span><span class=\\\"token punctuation\\\">:</span>\\n      <span class=\\\"token punctuation\\\">-</span> 8000<span class=\\\"token punctuation\\\">:</span><span class=\\\"token number\\\">8000</span>\\n    <span class=\\\"token key atrule\\\">command</span><span class=\\\"token punctuation\\\">:</span> npm run develop\\n</code></pre>\\n      </div>\\n<p>On va ensuite faciliter la vie des contributeurs avec un makefile</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-make\\\"><code>// in makefile\\n.PHONY: build help\\n\\nhelp:\\n\\t@grep -E '^[a-zA-Z0-9_-]+:.*?## .*$$' $(MAKEFILE_LIST) | sort | awk 'BEGIN {FS = \\\":.*?## \\\"}; {printf \\\"\\\\033[36m%-30s\\\\033[0m %s\\\\n\\\", $$1, $$2}'\\n\\ninstall: ## install dependencies with docker\\n\\t@docker-compose run --rm gatsby npm install\\n\\nstart: ## run gatsby in develop mode with docker\\n\\t@docker-compose up -d\\n\\nstop: ## stop gatsby in docker\\n\\t@docker-compose down\\n\\nlogs: ## Display logs from docker\\n\\t@docker-compose logs\\n\\nbuild: ## build site with docker\\n\\t@docker-compose run --rm gatsby npm run build</code></pre>\\n      </div>\\n<p>Ne reste donc plus qu'à lancer un <code>make start</code>. Mais là :</p>\\n<p><img src=\\\"/images/siteInaccessible.png\\\" alt=\\\"Site inaccessible\\\"></p>\\n<p>En effet, le <code>webpack dev server</code> gère très mal le localhost au sein du docker. Il faut donc modifier un peu la commande <code>develop</code> dans le <code>package.json</code> en ajoutant <code>--host 0.0.0.0</code> pour que webpack accepte toutes les requêtes:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-json\\\"><code>    <span class=\\\"token property\\\">\\\"scripts\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token property\\\">\\\"develop\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"gatsby develop --host 0.0.0.0\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token property\\\">\\\"build\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"gatsby build\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token property\\\">\\\"serve\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"gatsby serve\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n</code></pre>\\n      </div>\\n<p>Et voilà.</p>\",\"frontmatter\":{\"title\":\"Développer un site Gasby.js avec Docker\",\"date\":\"2017-11-06\",\"tags\":[\"Gatsby\",\"Docker\"],\"description\":\"En ce moment, j'utilise Gasby pour plusieurs sites (ce blog compris). Mais tous les contributeurs de ces sites ne veulent pas forcément installer Node sur leur machine. La solution évidente : Docker.\"}}},\"pathContext\":{\"slug\":\"gasby-avec-docker\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/gasby-avec-docker.json\n// module id = 404\n// module chunks = 218583586713429"],"sourceRoot":""}